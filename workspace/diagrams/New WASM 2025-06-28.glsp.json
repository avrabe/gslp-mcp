{
  "id": "63c02063-8b46-4cd6-a8eb-abbe28f0950c",
  "name": "New WASM 2025-06-28",
  "diagram_type": "wasm-component",
  "revision": 89,
  "created_at": "2025-06-28T12:07:26.320304Z",
  "updated_at": "2025-06-28T12:07:26.320307Z",
  "nodes": [
    {
      "id": "c4a9e1a7-ee68-40b1-8cca-19e6549afa5b",
      "node_type": "wasm-component",
      "label": "vehicle-control",
      "properties": {
        "exportsCount": 2,
        "totalFunctions": 33,
        "componentName": "vehicle-control",
        "componentPath": "/Users/r/git/glsp-rust/workspace/adas-wasm-components/wasm-outputs/vehicle-control.wasm",
        "interfaces": [
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]fusion-stream.get-environment",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "create-stream",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "fusion-data",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-environment",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "environment",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "exit",
                "params": [
                  {
                    "name": "status",
                    "type": "anonymous"
                  }
                ],
                "results": []
              }
            ],
            "interface_type": "import",
            "name": "exit",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [],
            "interface_type": "import",
            "name": "error",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]output-stream.check-write",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.write",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "contents",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.blocking-write-and-flush",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "contents",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.blocking-flush",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "streams",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stdin",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stdin",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stdout",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stdout",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stderr",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stderr",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "now",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "monotonic-clock",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "now",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "wall-clock",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]descriptor.write-via-stream",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "offset",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.append-via-stream",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.get-type",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.stat",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "filesystem-error-code",
                "params": [
                  {
                    "name": "err",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "types",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-directories",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "preopens",
            "type": "import"
          },
          {
            "direction": "output",
            "functions": [
              {
                "isAsync": false,
                "name": "get-steering-command",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-braking-command",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-acceleration-command",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-emergency-command",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "is-active",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "export",
            "name": "vehicle-commands",
            "type": "export"
          },
          {
            "direction": "output",
            "functions": [
              {
                "isAsync": false,
                "name": "initialize",
                "params": [
                  {
                    "name": "config",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "start-control",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "stop-control",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "emergency-stop",
                "params": [
                  {
                    "name": "reason",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "update-config",
                "params": [
                  {
                    "name": "config",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "set-limits",
                "params": [
                  {
                    "name": "limits",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-status",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-vehicle-state",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "run-diagnostic",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "export",
            "name": "control-system",
            "type": "export"
          }
        ],
        "description": "ADAS component: vehicle-control",
        "status": "available",
        "importsCount": 12,
        "dependenciesCount": 4,
        "witInfo": {
          "componentName": "vehicle-control",
          "dependencies": [
            {
              "interfaces": [
                "error",
                "streams"
              ],
              "package": "wasi:io",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "environment",
                "exit",
                "stdin",
                "stdout",
                "stderr"
              ],
              "package": "wasi:cli",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "monotonic-clock",
                "wall-clock"
              ],
              "package": "wasi:clocks",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "types",
                "preopens"
              ],
              "package": "wasi:filesystem",
              "version": "0.2.3"
            }
          ],
          "exports": [
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-steering-command",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-braking-command",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-acceleration-command",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-emergency-command",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "is-active",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "vehicle-commands",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Enum { cases: [\"low\", \"normal\", \"high\", \"emergency\"] }",
                  "name": "command-priority"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"target-angle\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"angular-velocity\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"torque-limit\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"priority\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "steering-command"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"target-deceleration\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"brake-pressure\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"abs-enabled\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"bool\") } }, WitParam { name: \"timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"priority\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "braking-command"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"target-acceleration\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"throttle-position\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"traction-control\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"bool\") } }, WitParam { name: \"timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"priority\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "acceleration-command"
                },
                {
                  "definition": "Enum { cases: [\"emergency-brake\", \"emergency-steer\", \"engine-cut\", \"hazard-lights\", \"full-stop\"] }",
                  "name": "emergency-action"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"action\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"reason\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"override-all\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"bool\") } }] }",
                  "name": "emergency-command"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "initialize",
                  "params": [
                    {
                      "name": "config",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "start-control",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "stop-control",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "emergency-stop",
                  "params": [
                    {
                      "name": "reason",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "update-config",
                  "params": [
                    {
                      "name": "config",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "set-limits",
                  "params": [
                    {
                      "name": "limits",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-status",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-vehicle-state",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "run-diagnostic",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "control-system",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Record { fields: [WitParam { name: \"x\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"y\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"z\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }] }",
                  "name": "position3d"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"vx\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"vy\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"vz\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"speed\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }] }",
                  "name": "velocity3d"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"ax\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"ay\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"az\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"magnitude\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }] }",
                  "name": "acceleration3d"
                },
                {
                  "definition": "Enum { cases: [\"manual\", \"assisted\", \"autonomous-level2\", \"autonomous-level3\", \"autonomous-level4\"] }",
                  "name": "control-mode"
                },
                {
                  "definition": "Enum { cases: [\"eco\", \"comfort\", \"normal\", \"sport\", \"custom\"] }",
                  "name": "comfort-level"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"control-mode\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"max-acceleration\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"max-deceleration\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"max-steering-rate\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"comfort-level\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"safety-margin\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "control-config"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"max-angle\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"max-angular-velocity\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"max-torque\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "steering-limits"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"max-deceleration\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"max-brake-pressure\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"min-stopping-distance\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "braking-limits"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"max-acceleration\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"max-throttle-rate\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"max-jerk\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "acceleration-limits"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"steering-limits\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"braking-limits\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"acceleration-limits\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "control-limits"
                },
                {
                  "definition": "Enum { cases: [\"park\", \"reverse\", \"neutral\", \"drive\", \"sport\", \"manual-first\", \"manual-second\", \"manual-third\", \"manual-fourth\", \"manual-fifth\", \"manual-sixth\"] }",
                  "name": "gear-position"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"position\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"velocity\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"acceleration\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"heading\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"steering-angle\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"brake-pressure\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"throttle-position\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"gear-position\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }] }",
                  "name": "vehicle-state"
                },
                {
                  "definition": "Enum { cases: [\"offline\", \"initializing\", \"standby\", \"active\", \"emergency\", \"error\", \"maintenance\"] }",
                  "name": "control-status"
                },
                {
                  "definition": "Enum { cases: [\"passed\", \"failed\", \"warning\", \"not-tested\"] }",
                  "name": "test-result"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"steering-system\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"braking-system\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"acceleration-system\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"safety-systems\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"response-time\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"overall-score\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "diagnostic-result"
                }
              ],
              "version": null
            }
          ],
          "filePath": "/Users/r/git/glsp-rust/workspace/adas-wasm-components/wasm-outputs/vehicle-control.wasm",
          "imports": [
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]fusion-stream.get-environment",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "create-stream",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "fusion-data",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "fusion-stream"
                },
                {
                  "definition": "Enum { cases: [\"unknown\", \"vehicle\", \"pedestrian\", \"cyclist\", \"traffic-sign\"] }",
                  "name": "object-type"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"x\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"y\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"z\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }] }",
                  "name": "position3d"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"vx\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"vy\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"vz\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"speed\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }] }",
                  "name": "velocity3d"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"object-id\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"object-type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"position\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"velocity\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"confidence\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "fused-object"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"objects\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"fusion-quality\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "environment-model"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-environment",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "environment",
              "namespace": null,
              "package": null,
              "types": [],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "exit",
                  "params": [
                    {
                      "name": "status",
                      "type": "anonymous"
                    }
                  ],
                  "results": []
                }
              ],
              "name": "exit",
              "namespace": null,
              "package": null,
              "types": [],
              "version": null
            },
            {
              "functions": [],
              "name": "error",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "error"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]output-stream.check-write",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.write",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "contents",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.blocking-write-and-flush",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "contents",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.blocking-flush",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "streams",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "output-stream"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "error"
                },
                {
                  "definition": "Variant { cases: [WitVariantCase { name: \"last-operation-failed\", payload: Some(WitType { name: \"anonymous\", type_def: Primitive(\"custom\") }) }, WitVariantCase { name: \"closed\", payload: None }] }",
                  "name": "stream-error"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "input-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stdin",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stdin",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "input-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stdout",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stdout",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stderr",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stderr",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "now",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "monotonic-clock",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "instant"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "now",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "wall-clock",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Record { fields: [WitParam { name: \"seconds\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"nanoseconds\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }] }",
                  "name": "datetime"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]descriptor.write-via-stream",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "offset",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.append-via-stream",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.get-type",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.stat",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "filesystem-error-code",
                  "params": [
                    {
                      "name": "err",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "types",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "descriptor"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "filesize"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                },
                {
                  "definition": "Enum { cases: [\"access\", \"would-block\", \"already\", \"bad-descriptor\", \"busy\", \"deadlock\", \"quota\", \"exist\", \"file-too-large\", \"illegal-byte-sequence\", \"in-progress\", \"interrupted\", \"invalid\", \"io\", \"is-directory\", \"loop\", \"too-many-links\", \"message-size\", \"name-too-long\", \"no-device\", \"no-entry\", \"no-lock\", \"insufficient-memory\", \"insufficient-space\", \"not-directory\", \"not-empty\", \"not-recoverable\", \"unsupported\", \"no-tty\", \"no-such-device\", \"overflow\", \"not-permitted\", \"pipe\", \"read-only\", \"invalid-seek\", \"text-file-busy\", \"cross-device\"] }",
                  "name": "error-code"
                },
                {
                  "definition": "Enum { cases: [\"unknown\", \"block-device\", \"character-device\", \"directory\", \"fifo\", \"symbolic-link\", \"regular-file\", \"socket\"] }",
                  "name": "descriptor-type"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "link-count"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "datetime"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"link-count\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"size\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"data-access-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"data-modification-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"status-change-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "descriptor-stat"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "error"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-directories",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "preopens",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "descriptor"
                }
              ],
              "version": null
            }
          ],
          "summary": {
            "dependenciesCount": 4,
            "exportsCount": 2,
            "importsCount": 12,
            "totalFunctions": 33,
            "typesCount": 20
          },
          "worldName": "root"
        },
        "label": "vehicle-control"
      }
    },
    {
      "id": "d86cbfa7-0a75-44ce-af7d-d0a40e6eb4d8",
      "node_type": "wasm-component",
      "label": "sensors-ultrasonic",
      "properties": {
        "label": "sensors-ultrasonic",
        "importsCount": 11,
        "componentPath": "/Users/r/git/glsp-rust/workspace/adas-wasm-components/dist/sensors-ultrasonic.wasm",
        "dependenciesCount": 4,
        "witInfo": {
          "componentName": "sensors-ultrasonic",
          "dependencies": [
            {
              "interfaces": [
                "error",
                "streams"
              ],
              "package": "wasi:io",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "environment",
                "exit",
                "stdin",
                "stdout",
                "stderr"
              ],
              "package": "wasi:cli",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "monotonic-clock",
                "wall-clock"
              ],
              "package": "wasi:clocks",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "types",
                "preopens"
              ],
              "package": "wasi:filesystem",
              "version": "0.2.3"
            }
          ],
          "exports": [
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]ultrasonic-stream.get-scan",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]ultrasonic-stream.is-available",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]ultrasonic-stream.get-min-distance",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "create-stream",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "ultrasonic-data",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Record { fields: [WitParam { name: \"x\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"y\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"z\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }] }",
                  "name": "position3d"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"x\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"y\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"z\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"w\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }] }",
                  "name": "quaternion"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"position\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"orientation\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "ultrasonic-pose"
                },
                {
                  "definition": "Enum { cases: [\"front-left\", \"front-center-left\", \"front-center-right\", \"front-right\", \"rear-left\", \"rear-center-left\", \"rear-center-right\", \"rear-right\"] }",
                  "name": "sensor-position"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"sensor-id\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"distance\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"confidence\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"sensor-position\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"sensor-pose\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "sensor-reading"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"sensors\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"scan-id\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }] }",
                  "name": "ultrasonic-scan"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "ultrasonic-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "initialize",
                  "params": [
                    {
                      "name": "config",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "start-monitoring",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "stop-monitoring",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "update-config",
                  "params": [
                    {
                      "name": "config",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-status",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "run-diagnostic",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "ultrasonic-control",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Enum { cases: [\"front-left\", \"front-center-left\", \"front-center-right\", \"front-right\", \"rear-left\", \"rear-center-left\", \"rear-center-right\", \"rear-right\"] }",
                  "name": "sensor-position"
                },
                {
                  "definition": "Enum { cases: [\"low\", \"medium\", \"high\", \"adaptive\"] }",
                  "name": "sensitivity-level"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"sensitivity-level\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"detection-range\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"scan-frequency\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"enabled-sensors\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"obstacle-warning\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"bool\") } }, WitParam { name: \"audio-feedback\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"bool\") } }] }",
                  "name": "ultrasonic-config"
                },
                {
                  "definition": "Enum { cases: [\"offline\", \"initializing\", \"monitoring\", \"detecting\", \"error\", \"maintenance\"] }",
                  "name": "ultrasonic-status"
                },
                {
                  "definition": "Enum { cases: [\"passed\", \"failed\", \"warning\", \"not-tested\"] }",
                  "name": "test-result"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"sensor-integrity\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"range-accuracy\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"response-time\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"environmental-immunity\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"cross-talk-suppression\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"overall-score\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "diagnostic-result"
                }
              ],
              "version": null
            }
          ],
          "filePath": "/Users/r/git/glsp-rust/workspace/adas-wasm-components/dist/sensors-ultrasonic.wasm",
          "imports": [
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-environment",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "environment",
              "namespace": null,
              "package": null,
              "types": [],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "exit",
                  "params": [
                    {
                      "name": "status",
                      "type": "anonymous"
                    }
                  ],
                  "results": []
                }
              ],
              "name": "exit",
              "namespace": null,
              "package": null,
              "types": [],
              "version": null
            },
            {
              "functions": [],
              "name": "error",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "error"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]output-stream.check-write",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.write",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "contents",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.blocking-write-and-flush",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "contents",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.blocking-flush",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "streams",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "error"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "output-stream"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "input-stream"
                },
                {
                  "definition": "Variant { cases: [WitVariantCase { name: \"last-operation-failed\", payload: Some(WitType { name: \"anonymous\", type_def: Primitive(\"custom\") }) }, WitVariantCase { name: \"closed\", payload: None }] }",
                  "name": "stream-error"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stdin",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stdin",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "input-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stdout",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stdout",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stderr",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stderr",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "now",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "monotonic-clock",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "instant"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "now",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "wall-clock",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Record { fields: [WitParam { name: \"seconds\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"nanoseconds\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }] }",
                  "name": "datetime"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]descriptor.write-via-stream",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "offset",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.append-via-stream",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.get-type",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.stat",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "filesystem-error-code",
                  "params": [
                    {
                      "name": "err",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "types",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "descriptor"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "error"
                },
                {
                  "definition": "Enum { cases: [\"access\", \"would-block\", \"already\", \"bad-descriptor\", \"busy\", \"deadlock\", \"quota\", \"exist\", \"file-too-large\", \"illegal-byte-sequence\", \"in-progress\", \"interrupted\", \"invalid\", \"io\", \"is-directory\", \"loop\", \"too-many-links\", \"message-size\", \"name-too-long\", \"no-device\", \"no-entry\", \"no-lock\", \"insufficient-memory\", \"insufficient-space\", \"not-directory\", \"not-empty\", \"not-recoverable\", \"unsupported\", \"no-tty\", \"no-such-device\", \"overflow\", \"not-permitted\", \"pipe\", \"read-only\", \"invalid-seek\", \"text-file-busy\", \"cross-device\"] }",
                  "name": "error-code"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "filesize"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                },
                {
                  "definition": "Enum { cases: [\"unknown\", \"block-device\", \"character-device\", \"directory\", \"fifo\", \"symbolic-link\", \"regular-file\", \"socket\"] }",
                  "name": "descriptor-type"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "link-count"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "datetime"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"link-count\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"size\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"data-access-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"data-modification-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"status-change-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "descriptor-stat"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-directories",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "preopens",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "descriptor"
                }
              ],
              "version": null
            }
          ],
          "summary": {
            "dependenciesCount": 4,
            "exportsCount": 2,
            "importsCount": 11,
            "totalFunctions": 27,
            "typesCount": 20
          },
          "worldName": "root"
        },
        "totalFunctions": 27,
        "description": "ADAS component: sensors-ultrasonic",
        "componentName": "sensors-ultrasonic",
        "status": "available",
        "exportsCount": 2,
        "interfaces": [
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-environment",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "environment",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "exit",
                "params": [
                  {
                    "name": "status",
                    "type": "anonymous"
                  }
                ],
                "results": []
              }
            ],
            "interface_type": "import",
            "name": "exit",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [],
            "interface_type": "import",
            "name": "error",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]output-stream.check-write",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.write",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "contents",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.blocking-write-and-flush",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "contents",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.blocking-flush",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "streams",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stdin",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stdin",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stdout",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stdout",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stderr",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stderr",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "now",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "monotonic-clock",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "now",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "wall-clock",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]descriptor.write-via-stream",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "offset",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.append-via-stream",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.get-type",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.stat",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "filesystem-error-code",
                "params": [
                  {
                    "name": "err",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "types",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-directories",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "preopens",
            "type": "import"
          },
          {
            "direction": "output",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]ultrasonic-stream.get-scan",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]ultrasonic-stream.is-available",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]ultrasonic-stream.get-min-distance",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "create-stream",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "export",
            "name": "ultrasonic-data",
            "type": "export"
          },
          {
            "direction": "output",
            "functions": [
              {
                "isAsync": false,
                "name": "initialize",
                "params": [
                  {
                    "name": "config",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "start-monitoring",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "stop-monitoring",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "update-config",
                "params": [
                  {
                    "name": "config",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-status",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "run-diagnostic",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "export",
            "name": "ultrasonic-control",
            "type": "export"
          }
        ]
      }
    },
    {
      "id": "a40accf1-692b-4763-9fa6-04ab10cfb621",
      "node_type": "wasm-component",
      "label": "system-hmi-interface",
      "properties": {
        "totalFunctions": 23,
        "description": "ADAS component: system-hmi-interface",
        "witInfo": {
          "componentName": "system-hmi-interface",
          "dependencies": [
            {
              "interfaces": [
                "error",
                "streams"
              ],
              "package": "wasi:io",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "environment",
                "exit",
                "stdin",
                "stdout",
                "stderr"
              ],
              "package": "wasi:cli",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "wall-clock"
              ],
              "package": "wasi:clocks",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "types",
                "preopens"
              ],
              "package": "wasi:filesystem",
              "version": "0.2.3"
            }
          ],
          "exports": [
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "initialize",
                  "params": [
                    {
                      "name": "displays",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "update-display",
                  "params": [
                    {
                      "name": "display-id",
                      "type": "anonymous"
                    },
                    {
                      "name": "content",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "show-warning",
                  "params": [
                    {
                      "name": "warning",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "hide-warning",
                  "params": [
                    {
                      "name": "warning-id",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-status",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "hmi-display",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Enum { cases: [\"instrument-cluster\", \"center-console\", \"heads-up-display\", \"rear-view-mirror\"] }",
                  "name": "display-type"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"width\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"height\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }] }",
                  "name": "resolution"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"display-id\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"display-type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"resolution\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"refresh-rate\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"brightness\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }] }",
                  "name": "display-config"
                },
                {
                  "definition": "Enum { cases: [\"safety\", \"comfort\", \"navigation\", \"entertainment\"] }",
                  "name": "feature-type"
                },
                {
                  "definition": "Enum { cases: [\"active\", \"standby\", \"disabled\", \"error\"] }",
                  "name": "feature-status"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"feature-id\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"feature-name\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"feature-type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"enabled\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"bool\") } }, WitParam { name: \"status\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "adas-feature"
                },
                {
                  "definition": "Enum { cases: [\"kmh\", \"mph\"] }",
                  "name": "speed-unit"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"current-speed\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"speed-limit\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"recommended-speed\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"speed-unit\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "speed-display"
                },
                {
                  "definition": "Enum { cases: [\"straight\", \"left\", \"right\", \"u-turn\", \"exit\"] }",
                  "name": "turn-direction"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"direction\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"distance\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"street-name\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }] }",
                  "name": "turn-info"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"name\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"distance\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"estimated-time\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }] }",
                  "name": "destination-info"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"next-turn\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"destination\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"route-guidance\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"bool\") } }] }",
                  "name": "navigation-display"
                },
                {
                  "definition": "Enum { cases: [\"collision\", \"lane-departure\", \"speed-limit\", \"blind-spot\", \"system-malfunction\"] }",
                  "name": "warning-type"
                },
                {
                  "definition": "Enum { cases: [\"info\", \"caution\", \"warning\", \"critical\"] }",
                  "name": "warning-severity"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"warning-id\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"warning-type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"severity\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"message\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }] }",
                  "name": "warning-display"
                },
                {
                  "definition": "Enum { cases: [\"manual\", \"level-one\", \"level-two\", \"level-three\", \"level-four\", \"level-five\"] }",
                  "name": "autonomy-level"
                },
                {
                  "definition": "Enum { cases: [\"all-operational\", \"degraded\", \"critical\"] }",
                  "name": "sensor-status"
                },
                {
                  "definition": "Enum { cases: [\"connected\", \"limited\", \"offline\"] }",
                  "name": "connectivity-status"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"autonomy-level\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"active-systems\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"sensor-status\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"connectivity\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "system-status-display"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"active-features\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"speed-info\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"navigation-info\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"warnings\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"system-status\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "adas-display"
                },
                {
                  "definition": "Enum { cases: [\"offline\", \"initializing\", \"active\", \"error\"] }",
                  "name": "interface-status"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "process-input",
                  "params": [
                    {
                      "name": "input",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "enable-input",
                  "params": [
                    {
                      "name": "input-type",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "disable-input",
                  "params": [
                    {
                      "name": "input-type",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "user-input",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Enum { cases: [\"button-press\", \"touch\", \"gesture\", \"voice-command\"] }",
                  "name": "action-type"
                },
                {
                  "definition": "Enum { cases: [\"pressed\", \"released\", \"held\"] }",
                  "name": "button-state"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"button-id\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"button-state\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "button-data"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"x\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"y\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"pressure\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "touch-data"
                },
                {
                  "definition": "Enum { cases: [\"tap\", \"double-tap\", \"swipe\", \"pinch\", \"long-press\"] }",
                  "name": "gesture-type"
                },
                {
                  "definition": "Enum { cases: [\"up\", \"down\", \"left\", \"right\"] }",
                  "name": "swipe-direction"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"gesture-type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"direction\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "gesture-data"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"command\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"confidence\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "voice-data"
                },
                {
                  "definition": "Variant { cases: [WitVariantCase { name: \"button\", payload: Some(WitType { name: \"anonymous\", type_def: Primitive(\"custom\") }) }, WitVariantCase { name: \"touch\", payload: Some(WitType { name: \"anonymous\", type_def: Primitive(\"custom\") }) }, WitVariantCase { name: \"gesture\", payload: Some(WitType { name: \"anonymous\", type_def: Primitive(\"custom\") }) }, WitVariantCase { name: \"voice\", payload: Some(WitType { name: \"anonymous\", type_def: Primitive(\"custom\") }) }] }",
                  "name": "action-data"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"action-type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"action-data\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }] }",
                  "name": "user-action"
                }
              ],
              "version": null
            }
          ],
          "filePath": "/Users/r/git/glsp-rust/workspace/adas-wasm-components/dist/system-hmi-interface.wasm",
          "imports": [
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-environment",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "environment",
              "namespace": null,
              "package": null,
              "types": [],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "exit",
                  "params": [
                    {
                      "name": "status",
                      "type": "anonymous"
                    }
                  ],
                  "results": []
                }
              ],
              "name": "exit",
              "namespace": null,
              "package": null,
              "types": [],
              "version": null
            },
            {
              "functions": [],
              "name": "error",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "error"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]output-stream.check-write",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.write",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "contents",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.blocking-write-and-flush",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "contents",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.blocking-flush",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "streams",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "error"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "output-stream"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "input-stream"
                },
                {
                  "definition": "Variant { cases: [WitVariantCase { name: \"last-operation-failed\", payload: Some(WitType { name: \"anonymous\", type_def: Primitive(\"custom\") }) }, WitVariantCase { name: \"closed\", payload: None }] }",
                  "name": "stream-error"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stdin",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stdin",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "input-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stdout",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stdout",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stderr",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stderr",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [],
              "name": "wall-clock",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Record { fields: [WitParam { name: \"seconds\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"nanoseconds\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }] }",
                  "name": "datetime"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]descriptor.write-via-stream",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "offset",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.append-via-stream",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.get-type",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.stat",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "filesystem-error-code",
                  "params": [
                    {
                      "name": "err",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "types",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "descriptor"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "error"
                },
                {
                  "definition": "Enum { cases: [\"access\", \"would-block\", \"already\", \"bad-descriptor\", \"busy\", \"deadlock\", \"quota\", \"exist\", \"file-too-large\", \"illegal-byte-sequence\", \"in-progress\", \"interrupted\", \"invalid\", \"io\", \"is-directory\", \"loop\", \"too-many-links\", \"message-size\", \"name-too-long\", \"no-device\", \"no-entry\", \"no-lock\", \"insufficient-memory\", \"insufficient-space\", \"not-directory\", \"not-empty\", \"not-recoverable\", \"unsupported\", \"no-tty\", \"no-such-device\", \"overflow\", \"not-permitted\", \"pipe\", \"read-only\", \"invalid-seek\", \"text-file-busy\", \"cross-device\"] }",
                  "name": "error-code"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "filesize"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                },
                {
                  "definition": "Enum { cases: [\"unknown\", \"block-device\", \"character-device\", \"directory\", \"fifo\", \"symbolic-link\", \"regular-file\", \"socket\"] }",
                  "name": "descriptor-type"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "link-count"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "datetime"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"link-count\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"size\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"data-access-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"data-modification-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"status-change-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "descriptor-stat"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-directories",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "preopens",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "descriptor"
                }
              ],
              "version": null
            }
          ],
          "summary": {
            "dependenciesCount": 4,
            "exportsCount": 2,
            "importsCount": 10,
            "totalFunctions": 23,
            "typesCount": 19
          },
          "worldName": "root"
        },
        "status": "available",
        "dependenciesCount": 4,
        "exportsCount": 2,
        "componentPath": "/Users/r/git/glsp-rust/workspace/adas-wasm-components/dist/system-hmi-interface.wasm",
        "importsCount": 10,
        "componentName": "system-hmi-interface",
        "interfaces": [
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-environment",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "environment",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "exit",
                "params": [
                  {
                    "name": "status",
                    "type": "anonymous"
                  }
                ],
                "results": []
              }
            ],
            "interface_type": "import",
            "name": "exit",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [],
            "interface_type": "import",
            "name": "error",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]output-stream.check-write",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.write",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "contents",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.blocking-write-and-flush",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "contents",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.blocking-flush",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "streams",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stdin",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stdin",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stdout",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stdout",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stderr",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stderr",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [],
            "interface_type": "import",
            "name": "wall-clock",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]descriptor.write-via-stream",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "offset",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.append-via-stream",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.get-type",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.stat",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "filesystem-error-code",
                "params": [
                  {
                    "name": "err",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "types",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-directories",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "preopens",
            "type": "import"
          },
          {
            "direction": "output",
            "functions": [
              {
                "isAsync": false,
                "name": "initialize",
                "params": [
                  {
                    "name": "displays",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "update-display",
                "params": [
                  {
                    "name": "display-id",
                    "type": "anonymous"
                  },
                  {
                    "name": "content",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "show-warning",
                "params": [
                  {
                    "name": "warning",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "hide-warning",
                "params": [
                  {
                    "name": "warning-id",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-status",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "export",
            "name": "hmi-display",
            "type": "export"
          },
          {
            "direction": "output",
            "functions": [
              {
                "isAsync": false,
                "name": "process-input",
                "params": [
                  {
                    "name": "input",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "enable-input",
                "params": [
                  {
                    "name": "input-type",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "disable-input",
                "params": [
                  {
                    "name": "input-type",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "export",
            "name": "user-input",
            "type": "export"
          }
        ],
        "label": "system-hmi-interface"
      }
    },
    {
      "id": "bb1bb730-15bb-4b2b-8579-a1a112df0265",
      "node_type": "wasm-component",
      "label": "system-feo-demo",
      "properties": {
        "label": "system-feo-demo",
        "status": "available",
        "description": "ADAS component: system-feo-demo",
        "dependenciesCount": 4,
        "exportsCount": 1,
        "interfaces": [
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "execute-cycle",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "can-execute",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "has-output",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-execution-state",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-component-info",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-diagnostics",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "video-decoder-feo",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "execute-cycle",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "can-execute",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "has-output",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-execution-state",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-component-info",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-diagnostics",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "object-detection-feo",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-environment",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "environment",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "exit",
                "params": [
                  {
                    "name": "status",
                    "type": "anonymous"
                  }
                ],
                "results": []
              }
            ],
            "interface_type": "import",
            "name": "exit",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [],
            "interface_type": "import",
            "name": "error",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "poll",
                "params": [
                  {
                    "name": "in",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "poll",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]input-stream.subscribe",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.check-write",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.write",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "contents",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.blocking-write-and-flush",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "contents",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.blocking-flush",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.subscribe",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "streams",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stdin",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stdin",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stdout",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stdout",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stderr",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stderr",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "now",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "subscribe-instant",
                "params": [
                  {
                    "name": "when",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "subscribe-duration",
                "params": [
                  {
                    "name": "when",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "monotonic-clock",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "now",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "wall-clock",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]descriptor.read-via-stream",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "offset",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.write-via-stream",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "offset",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.append-via-stream",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.get-type",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.stat",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "filesystem-error-code",
                "params": [
                  {
                    "name": "err",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "types",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-directories",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "preopens",
            "type": "import"
          },
          {
            "direction": "output",
            "functions": [
              {
                "isAsync": false,
                "name": "configure-demo",
                "params": [
                  {
                    "name": "config",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "execute-single-cycle",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "execute-n-cycles",
                "params": [
                  {
                    "name": "count",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-component-status",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-demo-metrics",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "run-full-diagnostics",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "reset-demo",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "export",
            "name": "feo-demo",
            "type": "export"
          }
        ],
        "importsCount": 14,
        "totalFunctions": 42,
        "witInfo": {
          "componentName": "system-feo-demo",
          "dependencies": [
            {
              "interfaces": [
                "error",
                "poll",
                "streams"
              ],
              "package": "wasi:io",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "environment",
                "exit",
                "stdin",
                "stdout",
                "stderr"
              ],
              "package": "wasi:cli",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "monotonic-clock",
                "wall-clock"
              ],
              "package": "wasi:clocks",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "types",
                "preopens"
              ],
              "package": "wasi:filesystem",
              "version": "0.2.3"
            }
          ],
          "exports": [
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "configure-demo",
                  "params": [
                    {
                      "name": "config",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "execute-single-cycle",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "execute-n-cycles",
                  "params": [
                    {
                      "name": "count",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-component-status",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-demo-metrics",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "run-full-diagnostics",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "reset-demo",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "feo-demo",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Enum { cases: [\"manual-step\", \"auto-sequence\", \"diagnostic-only\"] }",
                  "name": "demo-mode"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"mode\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"max-cycles\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"delay-between-cycles-ms\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }] }",
                  "name": "demo-config"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"total-cycles-executed\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"video-decoder-executions\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"object-detection-executions\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"total-execution-time-us\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"average-cycle-time-us\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }] }",
                  "name": "demo-metrics"
                }
              ],
              "version": null
            }
          ],
          "filePath": "/Users/r/git/glsp-rust/workspace/adas-wasm-components/dist/system-feo-demo.wasm",
          "imports": [
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "execute-cycle",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "can-execute",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "has-output",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-execution-state",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-component-info",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-diagnostics",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "video-decoder-feo",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Record { fields: [WitParam { name: \"execution-time-us\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"input-items-consumed\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"output-items-produced\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"errors-encountered\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"memory-used-bytes\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"cpu-cycles-estimated\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }] }",
                  "name": "execution-metrics"
                },
                {
                  "definition": "Enum { cases: [\"idle\", \"ready\", \"processing\", \"completed\", \"error\", \"disabled\"] }",
                  "name": "execution-state"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"component-id\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"component-type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"version\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"input-interfaces\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"output-interfaces\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"execution-time-budget-us\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"memory-budget-bytes\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }] }",
                  "name": "component-info"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "execute-cycle",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "can-execute",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "has-output",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-execution-state",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-component-info",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-diagnostics",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "object-detection-feo",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Record { fields: [WitParam { name: \"execution-time-us\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"input-items-consumed\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"output-items-produced\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"errors-encountered\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"memory-used-bytes\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"cpu-cycles-estimated\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }] }",
                  "name": "execution-metrics"
                },
                {
                  "definition": "Enum { cases: [\"idle\", \"ready\", \"processing\", \"completed\", \"error\", \"disabled\"] }",
                  "name": "execution-state"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"component-id\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"component-type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"version\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"input-interfaces\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"output-interfaces\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"execution-time-budget-us\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"memory-budget-bytes\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }] }",
                  "name": "component-info"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-environment",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "environment",
              "namespace": null,
              "package": null,
              "types": [],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "exit",
                  "params": [
                    {
                      "name": "status",
                      "type": "anonymous"
                    }
                  ],
                  "results": []
                }
              ],
              "name": "exit",
              "namespace": null,
              "package": null,
              "types": [],
              "version": null
            },
            {
              "functions": [],
              "name": "error",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "error"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "poll",
                  "params": [
                    {
                      "name": "in",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "poll",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "pollable"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]input-stream.subscribe",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.check-write",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.write",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "contents",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.blocking-write-and-flush",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "contents",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.blocking-flush",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.subscribe",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "streams",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "error"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "input-stream"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "output-stream"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "pollable"
                },
                {
                  "definition": "Variant { cases: [WitVariantCase { name: \"last-operation-failed\", payload: Some(WitType { name: \"anonymous\", type_def: Primitive(\"custom\") }) }, WitVariantCase { name: \"closed\", payload: None }] }",
                  "name": "stream-error"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stdin",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stdin",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "input-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stdout",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stdout",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stderr",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stderr",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "now",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "subscribe-instant",
                  "params": [
                    {
                      "name": "when",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "subscribe-duration",
                  "params": [
                    {
                      "name": "when",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "monotonic-clock",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "instant"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "duration"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "pollable"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "now",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "wall-clock",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Record { fields: [WitParam { name: \"seconds\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"nanoseconds\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }] }",
                  "name": "datetime"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]descriptor.read-via-stream",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "offset",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.write-via-stream",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "offset",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.append-via-stream",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.get-type",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.stat",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "filesystem-error-code",
                  "params": [
                    {
                      "name": "err",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "types",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "descriptor"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "error"
                },
                {
                  "definition": "Enum { cases: [\"access\", \"would-block\", \"already\", \"bad-descriptor\", \"busy\", \"deadlock\", \"quota\", \"exist\", \"file-too-large\", \"illegal-byte-sequence\", \"in-progress\", \"interrupted\", \"invalid\", \"io\", \"is-directory\", \"loop\", \"too-many-links\", \"message-size\", \"name-too-long\", \"no-device\", \"no-entry\", \"no-lock\", \"insufficient-memory\", \"insufficient-space\", \"not-directory\", \"not-empty\", \"not-recoverable\", \"unsupported\", \"no-tty\", \"no-such-device\", \"overflow\", \"not-permitted\", \"pipe\", \"read-only\", \"invalid-seek\", \"text-file-busy\", \"cross-device\"] }",
                  "name": "error-code"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "filesize"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "input-stream"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                },
                {
                  "definition": "Enum { cases: [\"unknown\", \"block-device\", \"character-device\", \"directory\", \"fifo\", \"symbolic-link\", \"regular-file\", \"socket\"] }",
                  "name": "descriptor-type"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "link-count"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "datetime"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"link-count\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"size\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"data-access-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"data-modification-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"status-change-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "descriptor-stat"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-directories",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "preopens",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "descriptor"
                }
              ],
              "version": null
            }
          ],
          "summary": {
            "dependenciesCount": 4,
            "exportsCount": 1,
            "importsCount": 14,
            "totalFunctions": 42,
            "typesCount": 25
          },
          "worldName": "root"
        },
        "componentPath": "/Users/r/git/glsp-rust/workspace/adas-wasm-components/dist/system-feo-demo.wasm",
        "componentName": "system-feo-demo"
      }
    },
    {
      "id": "004425d0-c29d-4b24-a2ef-472631d3e062",
      "node_type": "wasm-component",
      "label": "behavior-prediction",
      "properties": {
        "status": "available",
        "totalFunctions": 32,
        "interfaces": [
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "create-stream",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "detection-data",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "load",
                "params": [
                  {
                    "name": "graphs",
                    "type": "anonymous"
                  },
                  {
                    "name": "encoding",
                    "type": "anonymous"
                  },
                  {
                    "name": "target",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "init-execution-context",
                "params": [
                  {
                    "name": "graph",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "wasi-nn",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-environment",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "environment",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "exit",
                "params": [
                  {
                    "name": "status",
                    "type": "anonymous"
                  }
                ],
                "results": []
              }
            ],
            "interface_type": "import",
            "name": "exit",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [],
            "interface_type": "import",
            "name": "error",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]output-stream.check-write",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.write",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "contents",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.blocking-write-and-flush",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "contents",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.blocking-flush",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "streams",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stdin",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stdin",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stdout",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stdout",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stderr",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stderr",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "now",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "monotonic-clock",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "now",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "wall-clock",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]descriptor.write-via-stream",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "offset",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.append-via-stream",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.get-type",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.stat",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "filesystem-error-code",
                "params": [
                  {
                    "name": "err",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "types",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-directories",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "preopens",
            "type": "import"
          },
          {
            "direction": "output",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]prediction-stream.get-predictions",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]prediction-stream.is-available",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]prediction-stream.get-prediction-count",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "create-stream",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "export",
            "name": "prediction-data",
            "type": "export"
          },
          {
            "direction": "output",
            "functions": [
              {
                "isAsync": false,
                "name": "initialize",
                "params": [
                  {
                    "name": "config",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "load-model",
                "params": [
                  {
                    "name": "model-path",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "start-prediction",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "stop-prediction",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "update-config",
                "params": [
                  {
                    "name": "config",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-status",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-performance",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "run-diagnostic",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "export",
            "name": "prediction-control",
            "type": "export"
          }
        ],
        "exportsCount": 2,
        "componentName": "behavior-prediction",
        "label": "behavior-prediction",
        "dependenciesCount": 4,
        "witInfo": {
          "componentName": "behavior-prediction",
          "dependencies": [
            {
              "interfaces": [
                "error",
                "streams"
              ],
              "package": "wasi:io",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "environment",
                "exit",
                "stdin",
                "stdout",
                "stderr"
              ],
              "package": "wasi:cli",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "monotonic-clock",
                "wall-clock"
              ],
              "package": "wasi:clocks",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "types",
                "preopens"
              ],
              "package": "wasi:filesystem",
              "version": "0.2.3"
            }
          ],
          "exports": [
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]prediction-stream.get-predictions",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]prediction-stream.is-available",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]prediction-stream.get-prediction-count",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "create-stream",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "prediction-data",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Record { fields: [WitParam { name: \"x\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"y\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"z\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }] }",
                  "name": "position3d"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"vx\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"vy\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"vz\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"speed\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }] }",
                  "name": "velocity3d"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"ax\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"ay\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"az\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"magnitude\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }] }",
                  "name": "acceleration3d"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"position\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"velocity\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"acceleration\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "trajectory-point"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"waypoints\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"duration\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"probability\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "predicted-trajectory"
                },
                {
                  "definition": "Enum { cases: [\"straight-motion\", \"lane-change-left\", \"lane-change-right\", \"turning-left\", \"turning-right\", \"stopping\", \"accelerating\", \"decelerating\", \"merging\", \"yielding\", \"unknown\"] }",
                  "name": "behavior-type"
                },
                {
                  "definition": "Enum { cases: [\"continue-straight\", \"change-lane\", \"turn\", \"stop\", \"merge\", \"overtake\", \"park\", \"u-turn\", \"unknown\"] }",
                  "name": "intention-type"
                },
                {
                  "definition": "Enum { cases: [\"none\", \"low\", \"medium\", \"high\", \"critical\"] }",
                  "name": "risk-level"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"object-id\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"predicted-behavior\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"trajectory\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"intention\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"risk-level\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"confidence\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "behavior-prediction"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"predictions\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"prediction-horizon\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"confidence-level\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "prediction-results"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "prediction-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "initialize",
                  "params": [
                    {
                      "name": "config",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "load-model",
                  "params": [
                    {
                      "name": "model-path",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "start-prediction",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "stop-prediction",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "update-config",
                  "params": [
                    {
                      "name": "config",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-status",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-performance",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "run-diagnostic",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "prediction-control",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Enum { cases: [\"cpu\", \"gpu\", \"npu\", \"auto\"] }",
                  "name": "inference-device"
                },
                {
                  "definition": "Enum { cases: [\"vehicle-behavior\", \"pedestrian-behavior\", \"cyclist-behavior\", \"intersection-analysis\", \"highway-analysis\"] }",
                  "name": "prediction-mode"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"model-path\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"prediction-horizon\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"confidence-threshold\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"update-frequency\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"context-window\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"inference-device\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"prediction-modes\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "prediction-config"
                },
                {
                  "definition": "Enum { cases: [\"offline\", \"initializing\", \"loading-model\", \"ready\", \"predicting\", \"error\", \"maintenance\"] }",
                  "name": "prediction-status"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"prediction-accuracy\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"processing-time-ms\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"throughput-hz\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"cpu-usage-percent\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"memory-usage-mb\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"false-positive-rate\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"false-negative-rate\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "performance-metrics"
                },
                {
                  "definition": "Enum { cases: [\"passed\", \"failed\", \"warning\", \"not-tested\"] }",
                  "name": "test-result"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"model-integrity\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"prediction-accuracy\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"temporal-consistency\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"computational-performance\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"memory-efficiency\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"overall-score\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "diagnostic-result"
                }
              ],
              "version": null
            }
          ],
          "filePath": "/Users/r/git/glsp-rust/workspace/adas-wasm-components/wasm-outputs/behavior-prediction.wasm",
          "imports": [
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "create-stream",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "detection-data",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "detection-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "load",
                  "params": [
                    {
                      "name": "graphs",
                      "type": "anonymous"
                    },
                    {
                      "name": "encoding",
                      "type": "anonymous"
                    },
                    {
                      "name": "target",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "init-execution-context",
                  "params": [
                    {
                      "name": "graph",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "wasi-nn",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Enum { cases: [\"openvino\", \"onnx\", \"tensorflow\", \"pytorch\", \"tensorflowlite\"] }",
                  "name": "graph-encoding"
                },
                {
                  "definition": "Enum { cases: [\"cpu\", \"gpu\", \"tpu\"] }",
                  "name": "execution-target"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "graph"
                },
                {
                  "definition": "Variant { cases: [WitVariantCase { name: \"not-found\", payload: None }, WitVariantCase { name: \"invalid-argument\", payload: None }, WitVariantCase { name: \"invalid-encoding\", payload: None }, WitVariantCase { name: \"timeout\", payload: None }, WitVariantCase { name: \"runtime-error\", payload: None }, WitVariantCase { name: \"unsupported-operation\", payload: None }, WitVariantCase { name: \"too-large\", payload: None }, WitVariantCase { name: \"not-supported\", payload: None }] }",
                  "name": "graph-error"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "graph-execution-context"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-environment",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "environment",
              "namespace": null,
              "package": null,
              "types": [],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "exit",
                  "params": [
                    {
                      "name": "status",
                      "type": "anonymous"
                    }
                  ],
                  "results": []
                }
              ],
              "name": "exit",
              "namespace": null,
              "package": null,
              "types": [],
              "version": null
            },
            {
              "functions": [],
              "name": "error",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "error"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]output-stream.check-write",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.write",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "contents",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.blocking-write-and-flush",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "contents",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.blocking-flush",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "streams",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "output-stream"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "error"
                },
                {
                  "definition": "Variant { cases: [WitVariantCase { name: \"last-operation-failed\", payload: Some(WitType { name: \"anonymous\", type_def: Primitive(\"custom\") }) }, WitVariantCase { name: \"closed\", payload: None }] }",
                  "name": "stream-error"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "input-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stdin",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stdin",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "input-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stdout",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stdout",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stderr",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stderr",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "now",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "monotonic-clock",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "instant"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "now",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "wall-clock",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Record { fields: [WitParam { name: \"seconds\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"nanoseconds\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }] }",
                  "name": "datetime"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]descriptor.write-via-stream",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "offset",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.append-via-stream",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.get-type",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.stat",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "filesystem-error-code",
                  "params": [
                    {
                      "name": "err",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "types",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "descriptor"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "filesize"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                },
                {
                  "definition": "Enum { cases: [\"access\", \"would-block\", \"already\", \"bad-descriptor\", \"busy\", \"deadlock\", \"quota\", \"exist\", \"file-too-large\", \"illegal-byte-sequence\", \"in-progress\", \"interrupted\", \"invalid\", \"io\", \"is-directory\", \"loop\", \"too-many-links\", \"message-size\", \"name-too-long\", \"no-device\", \"no-entry\", \"no-lock\", \"insufficient-memory\", \"insufficient-space\", \"not-directory\", \"not-empty\", \"not-recoverable\", \"unsupported\", \"no-tty\", \"no-such-device\", \"overflow\", \"not-permitted\", \"pipe\", \"read-only\", \"invalid-seek\", \"text-file-busy\", \"cross-device\"] }",
                  "name": "error-code"
                },
                {
                  "definition": "Enum { cases: [\"unknown\", \"block-device\", \"character-device\", \"directory\", \"fifo\", \"symbolic-link\", \"regular-file\", \"socket\"] }",
                  "name": "descriptor-type"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "link-count"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "datetime"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"link-count\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"size\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"data-access-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"data-modification-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"status-change-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "descriptor-stat"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "error"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-directories",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "preopens",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "descriptor"
                }
              ],
              "version": null
            }
          ],
          "summary": {
            "dependenciesCount": 4,
            "exportsCount": 2,
            "importsCount": 13,
            "totalFunctions": 32,
            "typesCount": 20
          },
          "worldName": "root"
        },
        "description": "ADAS component: behavior-prediction",
        "importsCount": 13,
        "componentPath": "/Users/r/git/glsp-rust/workspace/adas-wasm-components/wasm-outputs/behavior-prediction.wasm"
      }
    },
    {
      "id": "0f1ef8a2-812a-46bd-a48d-0147ca0d7988",
      "node_type": "wasm-component",
      "label": "adas_video_decoder",
      "properties": {
        "componentName": "adas_video_decoder",
        "totalFunctions": 52,
        "dependenciesCount": 4,
        "componentPath": "/Users/r/git/glsp-rust/workspace/adas-wasm-components/components/input/video-decoder/target/wasm32-wasip2/debug/adas_video_decoder.wasm",
        "description": "ADAS component: adas_video_decoder",
        "label": "adas_video_decoder",
        "exportsCount": 3,
        "interfaces": [
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-environment",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "environment",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "exit",
                "params": [
                  {
                    "name": "status",
                    "type": "anonymous"
                  }
                ],
                "results": []
              }
            ],
            "interface_type": "import",
            "name": "exit",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [],
            "interface_type": "import",
            "name": "error",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]output-stream.check-write",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.write",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "contents",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.blocking-write-and-flush",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "contents",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.blocking-flush",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "streams",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stdin",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stdin",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stdout",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stdout",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stderr",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stderr",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "now",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "monotonic-clock",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "now",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "wall-clock",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]descriptor.write-via-stream",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "offset",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.append-via-stream",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.get-type",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.stat",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "filesystem-error-code",
                "params": [
                  {
                    "name": "err",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "types",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-directories",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "preopens",
            "type": "import"
          },
          {
            "direction": "output",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]camera-stream.get-frame",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]camera-stream.get-intrinsics",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]camera-stream.is-available",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "create-stream",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "export",
            "name": "camera-data",
            "type": "export"
          },
          {
            "direction": "output",
            "functions": [
              {
                "isAsync": false,
                "name": "load-embedded-video",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "play",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "pause",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "stop",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "seek-to-frame",
                "params": [
                  {
                    "name": "frame",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "seek-to-time",
                "params": [
                  {
                    "name": "time-ms",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "set-playback-speed",
                "params": [
                  {
                    "name": "speed",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "set-loop",
                "params": [
                  {
                    "name": "enabled",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "update-config",
                "params": [
                  {
                    "name": "config",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-status",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-current-frame",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-elapsed-time",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-playback-metrics",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-video-info",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "run-diagnostic",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "export",
            "name": "video-control",
            "type": "export"
          },
          {
            "direction": "output",
            "functions": [
              {
                "isAsync": false,
                "name": "execute-cycle",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "can-execute",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "has-output",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "reset-component",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "enable-component",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "disable-component",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "flush-component",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-execution-state",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-last-metrics",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-component-info",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-data-slot-status",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-diagnostics",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "has-input-data",
                "params": [
                  {
                    "name": "slot-name",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "has-output-space",
                "params": [
                  {
                    "name": "slot-name",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-slot-size",
                "params": [
                  {
                    "name": "slot-name",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "clear-slot",
                "params": [
                  {
                    "name": "slot-name",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "export",
            "name": "feo-control",
            "type": "export"
          }
        ],
        "witInfo": {
          "componentName": "adas_video_decoder",
          "dependencies": [
            {
              "interfaces": [
                "error",
                "streams"
              ],
              "package": "wasi:io",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "environment",
                "exit",
                "stdin",
                "stdout",
                "stderr"
              ],
              "package": "wasi:cli",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "monotonic-clock",
                "wall-clock"
              ],
              "package": "wasi:clocks",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "types",
                "preopens"
              ],
              "package": "wasi:filesystem",
              "version": "0.2.3"
            }
          ],
          "exports": [
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]camera-stream.get-frame",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]camera-stream.get-intrinsics",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]camera-stream.is-available",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "create-stream",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "camera-data",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Record { fields: [WitParam { name: \"x\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"y\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"z\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }] }",
                  "name": "position3d"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"x\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"y\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"z\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"w\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }] }",
                  "name": "quaternion"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"position\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"orientation\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "camera-pose"
                },
                {
                  "definition": "Enum { cases: [\"rgb8\", \"rgba8\", \"bgr8\", \"bgra8\", \"yuv420\", \"gray8\", \"gray16\"] }",
                  "name": "pixel-format"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"width\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"height\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"data\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"format\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"exposure-time\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"gain\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"sensor-pose\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "camera-frame"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"focal-length-x\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"focal-length-y\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"principal-point-x\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"principal-point-y\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"distortion\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "camera-intrinsics"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "camera-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "load-embedded-video",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "play",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "pause",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "stop",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "seek-to-frame",
                  "params": [
                    {
                      "name": "frame",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "seek-to-time",
                  "params": [
                    {
                      "name": "time-ms",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "set-playback-speed",
                  "params": [
                    {
                      "name": "speed",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "set-loop",
                  "params": [
                    {
                      "name": "enabled",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "update-config",
                  "params": [
                    {
                      "name": "config",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-status",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-current-frame",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-elapsed-time",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-playback-metrics",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-video-info",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "run-diagnostic",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "video-control",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Record { fields: [WitParam { name: \"auto-play\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"bool\") } }, WitParam { name: \"loop-enabled\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"bool\") } }, WitParam { name: \"playback-speed\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"start-frame\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }] }",
                  "name": "video-config"
                },
                {
                  "definition": "Enum { cases: [\"unloaded\", \"loading\", \"ready\", \"playing\", \"paused\", \"ended\", \"error\"] }",
                  "name": "video-status"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"width\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"height\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"frame-count\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"frame-rate\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"duration-ms\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"file-size\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }] }",
                  "name": "video-info"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"current-frame\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"elapsed-time-ms\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"playback-speed\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"frames-decoded\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"cache-hit-rate\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "playback-metrics"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "execute-cycle",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "can-execute",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "has-output",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "reset-component",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "enable-component",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "disable-component",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "flush-component",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-execution-state",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-last-metrics",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-component-info",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-data-slot-status",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-diagnostics",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "has-input-data",
                  "params": [
                    {
                      "name": "slot-name",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "has-output-space",
                  "params": [
                    {
                      "name": "slot-name",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-slot-size",
                  "params": [
                    {
                      "name": "slot-name",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "clear-slot",
                  "params": [
                    {
                      "name": "slot-name",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "feo-control",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Enum { cases: [\"idle\", \"ready\", \"processing\", \"completed\", \"error\", \"disabled\"] }",
                  "name": "execution-state"
                },
                {
                  "definition": "Enum { cases: [\"success\", \"no-input-data\", \"no-output-space\", \"processing-error\", \"component-disabled\"] }",
                  "name": "execution-result"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"execution-time-us\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"input-items-consumed\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"output-items-produced\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"errors-encountered\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"memory-used-bytes\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"cpu-cycles-estimated\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }] }",
                  "name": "execution-metrics"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"component-id\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"component-type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"version\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"input-interfaces\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"output-interfaces\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"execution-time-budget-us\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"memory-budget-bytes\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }] }",
                  "name": "component-info"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"slot-name\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"slot-type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"buffer-size\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"buffer-capacity\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"items-available\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"items-pending\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }] }",
                  "name": "data-slot-info"
                }
              ],
              "version": null
            }
          ],
          "filePath": "/Users/r/git/glsp-rust/workspace/adas-wasm-components/components/input/video-decoder/target/wasm32-wasip2/debug/adas_video_decoder.wasm",
          "imports": [
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-environment",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "environment",
              "namespace": null,
              "package": null,
              "types": [],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "exit",
                  "params": [
                    {
                      "name": "status",
                      "type": "anonymous"
                    }
                  ],
                  "results": []
                }
              ],
              "name": "exit",
              "namespace": null,
              "package": null,
              "types": [],
              "version": null
            },
            {
              "functions": [],
              "name": "error",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "error"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]output-stream.check-write",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.write",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "contents",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.blocking-write-and-flush",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "contents",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.blocking-flush",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "streams",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "error"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "output-stream"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "input-stream"
                },
                {
                  "definition": "Variant { cases: [WitVariantCase { name: \"last-operation-failed\", payload: Some(WitType { name: \"anonymous\", type_def: Primitive(\"custom\") }) }, WitVariantCase { name: \"closed\", payload: None }] }",
                  "name": "stream-error"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stdin",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stdin",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "input-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stdout",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stdout",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stderr",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stderr",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "now",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "monotonic-clock",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "instant"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "now",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "wall-clock",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Record { fields: [WitParam { name: \"seconds\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"nanoseconds\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }] }",
                  "name": "datetime"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]descriptor.write-via-stream",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "offset",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.append-via-stream",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.get-type",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.stat",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "filesystem-error-code",
                  "params": [
                    {
                      "name": "err",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "types",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "descriptor"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "error"
                },
                {
                  "definition": "Enum { cases: [\"access\", \"would-block\", \"already\", \"bad-descriptor\", \"busy\", \"deadlock\", \"quota\", \"exist\", \"file-too-large\", \"illegal-byte-sequence\", \"in-progress\", \"interrupted\", \"invalid\", \"io\", \"is-directory\", \"loop\", \"too-many-links\", \"message-size\", \"name-too-long\", \"no-device\", \"no-entry\", \"no-lock\", \"insufficient-memory\", \"insufficient-space\", \"not-directory\", \"not-empty\", \"not-recoverable\", \"unsupported\", \"no-tty\", \"no-such-device\", \"overflow\", \"not-permitted\", \"pipe\", \"read-only\", \"invalid-seek\", \"text-file-busy\", \"cross-device\"] }",
                  "name": "error-code"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "filesize"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                },
                {
                  "definition": "Enum { cases: [\"unknown\", \"block-device\", \"character-device\", \"directory\", \"fifo\", \"symbolic-link\", \"regular-file\", \"socket\"] }",
                  "name": "descriptor-type"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "link-count"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "datetime"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"link-count\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"size\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"data-access-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"data-modification-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"status-change-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "descriptor-stat"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-directories",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "preopens",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "descriptor"
                }
              ],
              "version": null
            }
          ],
          "summary": {
            "dependenciesCount": 4,
            "exportsCount": 3,
            "importsCount": 11,
            "totalFunctions": 52,
            "typesCount": 20
          },
          "worldName": "root"
        },
        "importsCount": 11,
        "status": "available"
      }
    }
  ],
  "edges": [],
  "metadata": {}
}