[package]
name = "adas-working-system"
version = "0.1.0"
description = "ADAS system with working components only - proof of concept"
authors = ["ADAS Team"]

[world]
name = "adas-working-system"
path = "wit/worlds/adas-working-system.wit"

# Working components only (7 components that build successfully)
[components]

# === SENSOR LAYER ===
camera-front = { path = "target/wac-temp/adas_camera_front_ecu-component.wasm" }
radar-front = { path = "target/wac-temp/adas_radar_front_ecu-component.wasm" }

# === AI PROCESSING LAYER ===
behavior-prediction = { path = "target/wac-temp/adas_behavior_prediction_ai-component.wasm" }

# === CONTROL LAYER ===
planning-decision = { path = "target/wac-temp/adas_planning_decision-component.wasm" }

# === INTEGRATION LAYER ===
video-ai-pipeline = { path = "target/wac-temp/adas_video_ai_pipeline-component.wasm" }

# === SYSTEM LAYER ===
safety-monitor = { path = "target/wac-temp/adas_safety_monitor-component.wasm" }
can-gateway = { path = "target/wac-temp/adas_can_gateway-component.wasm" }

# Simplified composition for proof of concept
[composition]
# Basic data flow with working components
sensor-flow = [
    "camera-front.sensor-data -> planning-decision.sensor-data-input",
    "radar-front.sensor-data -> planning-decision.sensor-data-input"
]

ai-flow = [
    "behavior-prediction.prediction-data -> planning-decision.prediction-data-input"
]

system-flow = [
    "planning-decision.planning-data -> safety-monitor.planning-data-input",
    "safety-monitor.safety-data -> can-gateway.safety-data-input"
]

# Integration flow
integration-flow = [
    "video-ai-pipeline.video-data -> behavior-prediction.video-data-input"
]

# FEO execution phases (simplified)
[feo]
phases = [
    "sensor-collection",
    "ai-processing", 
    "planning",
    "system-monitoring"
]

# Simplified timing for proof of concept
timing = [
    { phase = "sensor-collection", max_duration_ms = 10 },
    { phase = "ai-processing", max_duration_ms = 30 },
    { phase = "planning", max_duration_ms = 15 },
    { phase = "system-monitoring", max_duration_ms = 10 }
]

cycle_time_ms = 65  # Total of individual phases + margin
safety_margin_ms = 5

# Resource allocation for working components
[resources]
behavior-prediction = { memory_mb = 256, cpu_cores = 1 }
video-ai-pipeline = { memory_mb = 128, cpu_cores = 1 }
safety-monitor = { memory_mb = 64, cpu_cores = 1, priority = "highest" }
default = { memory_mb = 32, cpu_cores = 1, priority = "normal" }

# Build configuration
[build]
target = "wasm32-wasip2"
optimize = true
strip_debug = false

# Required WASI features
wasi_features = [
    "wasi-clocks",
    "wasi-random", 
    "wasi-io"
]

# Validation settings
[validation]
strict_interfaces = true
validate_timing = true
validate_resources = true
validate_safety = true