package adas:graphics-visualizer@0.1.0;

/// Graphics visualizer component world
/// Renders visual data using custom graphics implementation
world graphics-visualizer {
    // Import orchestration interfaces
    import adas:orchestration/execution-control;
    import adas:orchestration/data-flow;
    import adas:orchestration/resource-management;
    
    // Import common types
    import adas:common-types/types;
    
    // Import data for visualization
    import adas:data/sensor-data;
    import adas:data/perception-data;
    
    // Export graphics control interface
    export adas:control/graphics-control;
    export adas:diagnostics/health-monitoring;
    export adas:diagnostics/performance-monitoring;
}

/// Graphics control interface
interface graphics-control {
    use adas:common-types/types.{video-frame, detection-result};
    
    /// Render video frame with overlays
    render-frame: func(frame: video-frame, detections: list<detection-result>) -> result<video-frame, graphics-error>;
    
    /// Set graphics parameters
    set-parameters: func(params: graphics-parameters) -> result<_, graphics-error>;
    
    /// Get current graphics statistics
    get-graphics-stats: func() -> graphics-statistics;
    
    /// Graphics parameters
    record graphics-parameters {
        overlay-enabled: bool,
        detection-boxes: bool,
        confidence-labels: bool,
        fps-display: bool,
        color-scheme: string,
    }
    
    /// Graphics statistics
    record graphics-statistics {
        frames-rendered: u32,
        render-fps: f32,
        render-time-ms: u32,
        memory-usage-mb: u32,
    }
    
    variant graphics-error {
        invalid-frame,
        render-failed,
        resource-exhausted,
    }
}