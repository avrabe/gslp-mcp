[component]
name = "adas-control"
version = "0.1.0"
description = "Vehicle control component for precise actuation and low-level control in ADAS systems"
author = "ADAS Development Team"
license = "Apache-2.0"
created = "2025-06-26"

[interfaces]
exports = ["adas:control/control"]
imports = ["adas:sensor-fusion/types", "adas:planning/planning"]

[dependencies]
external = [
    "adas:sensor-fusion@0.1.0",
    "adas:planning@0.1.0"
]

[hardware_requirements]
min_cpu_cores = 1
min_memory_mb = 256
min_storage_mb = 50
requires_gpu = false
requires_real_time_os = true
supported_architectures = ["x86_64", "aarch64", "arm"]

[real_time_constraints]
max_processing_latency_ms = 10
update_frequency_hz = 100
priority_level = "critical"
deadline_type = "hard"
jitter_tolerance_ms = 1

[safety_certification]
iso26262_asil = "D"  # Automotive Safety Integrity Level D (highest)
functional_safety_tested = true
fail_safe_behavior = "safe_stop"
redundancy_required = true
fail_operational_time_seconds = 3.0

[performance_characteristics]
control_accuracy = 0.98
settling_time_ms = 200
overshoot_percentage = 5.0
steady_state_error_percent = 1.0
response_bandwidth_hz = 10
memory_usage_mb = 64
cpu_usage_percent = 20

[control_algorithms]
lateral_controllers = [
    "pid",
    "pure_pursuit",
    "stanley",
    "lqr",             # Linear Quadratic Regulator
    "mpc",             # Model Predictive Control
    "sliding_mode"
]

longitudinal_controllers = [
    "pid_cruise",
    "adaptive_cruise",
    "mpc_longitudinal", 
    "feedforward_compensation"
]

advanced_controllers = [
    "gain_scheduling",
    "robust_control",
    "adaptive_control",
    "neural_network_control"
]

[vehicle_dynamics]
supported_models = [
    "bicycle_model",
    "single_track",
    "double_track", 
    "full_vehicle_14dof"
]

tire_models = [
    "linear",
    "pacejka_magic_formula",
    "dugoff",
    "fiala"
]

actuator_models = [
    "first_order_lag",
    "second_order",
    "rate_limited",
    "deadband_nonlinear"
]

[actuation_interfaces]
steering_control = [
    "angle_control",
    "torque_control", 
    "rate_control"
]

throttle_control = [
    "position_control",
    "torque_request",
    "power_request"
]

brake_control = [
    "pressure_control",
    "force_control",
    "deceleration_request"
]

gear_control = [
    "automatic_transmission",
    "manual_transmission",
    "cvt"
]

[safety_systems]
monitoring_functions = [
    "actuator_health",
    "sensor_plausibility",
    "control_performance",
    "communication_integrity"
]

failsafe_mechanisms = [
    "graceful_degradation",
    "emergency_stop", 
    "safe_state_transition",
    "limp_home_mode"
]

safety_boundaries = [
    "control_saturation",
    "rate_limiting",
    "envelope_protection",
    "stability_control"
]

[control_parameters]
pid_parameters = [
    "proportional_gain",
    "integral_gain",
    "derivative_gain",
    "integral_windup_limit",
    "derivative_filter_time"
]

mpc_parameters = [
    "prediction_horizon",
    "control_horizon",
    "state_weights",
    "control_weights",
    "constraint_weights"
]

adaptive_parameters = [
    "adaptation_rate",
    "parameter_bounds",
    "forgetting_factor",
    "excitation_signal"
]

[calibration]
auto_tuning_methods = [
    "ziegler_nichols",
    "cohen_coon",
    "genetic_algorithm",
    "particle_swarm"
]

identification_methods = [
    "least_squares",
    "recursive_least_squares",
    "prediction_error_method",
    "subspace_identification"
]

validation_tests = [
    "step_response",
    "frequency_response",
    "disturbance_rejection",
    "robustness_margins"
]

[communication]
can_bus_protocols = [
    "can_2.0b",
    "can_fd",
    "j1939"
]

automotive_protocols = [
    "lin",
    "flexray", 
    "most",
    "automotive_ethernet"
]

safety_protocols = [
    "can_xl",
    "ttcan",
    "safety_can"
]

[testing]
unit_tests_coverage = 97
integration_tests = true
hardware_in_loop_tested = true
vehicle_in_loop_tested = true

test_scenarios = [
    "step_input",
    "ramp_input",
    "sine_wave",
    "noise_disturbance",
    "sensor_failure",
    "actuator_saturation"
]

validation_environments = [
    "matlab_simulink",
    "carla_simulator",
    "prescan",
    "vehicle_testbed"
]

[compliance]
automotive_standards = [
    "iso26262",        # Functional Safety
    "iso21448",        # SOTIF (Safety of the Intended Functionality)
    "iec61508",        # General Functional Safety
    "autosar"          # Automotive Software Architecture
]

regional_standards = [
    "fmvss",           # Federal Motor Vehicle Safety Standards (US)
    "ece_regulations", # Economic Commission for Europe (EU)
    "gb_standards"     # Chinese National Standards
]

[documentation]
api_documentation = "docs/control_api.md"
tuning_guide = "docs/control_tuning.md"
safety_manual = "docs/control_safety.md"
calibration_procedures = "docs/control_calibration.md"