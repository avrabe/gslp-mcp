/// Front Camera Component - EXPORTS camera data stream
package adas:camera-front@0.1.0;

world camera-front-component {
    /// Export camera data stream
    export camera-data: interface {
        /// Shared spatial types
        record position3d {
            x: f64,
            y: f64,
            z: f64,
        }

        record quaternion {
            x: f64,
            y: f64,
            z: f64,
            w: f64,
        }

        /// Camera data types
        record camera-frame {
            width: u32,
            height: u32,
            data: list<u8>,
            format: pixel-format,
            timestamp: u64,
            exposure-time: f32,
            gain: f32,
            sensor-pose: camera-pose,
        }

        record camera-pose {
            position: position3d,
            orientation: quaternion,
        }

        enum pixel-format {
            rgb8,
            rgba8,
            bgr8,
            bgra8,
            yuv420,
            gray8,
            gray16,
        }

        record camera-intrinsics {
            focal-length-x: f64,
            focal-length-y: f64,
            principal-point-x: f64,
            principal-point-y: f64,
            distortion: list<f64>,
        }

        resource camera-stream {
            get-frame: func() -> result<camera-frame, string>;
            get-intrinsics: func() -> camera-intrinsics;
            is-available: func() -> bool;
        }
        
        create-stream: func() -> camera-stream;
    }
    
    /// Export camera control interface
    export camera-control: interface {
        /// Camera configuration types
        record camera-config {
            resolution: resolution,
            frame-rate: u32,
            exposure-mode: exposure-mode,
            white-balance: white-balance-mode,
            image-format: image-format,
            auto-focus: bool,
            hdr-enabled: bool,
        }

        enum resolution {
            hd-resolution,
            full-hd,
            uhd-four-k,
        }

        enum exposure-mode {
            auto,
            manual,
            shutter-priority,
            iso-priority,
        }

        enum white-balance-mode {
            auto,
            daylight,
            cloudy,
            tungsten,
            fluorescent,
            manual,
        }

        enum image-format {
            jpeg,
            png,
            raw,
            yuv,
        }

        enum camera-status {
            offline,
            initializing,
            streaming,
            error,
            maintenance,
        }

        record diagnostic-result {
            lens-health: test-result,
            sensor-health: test-result,
            auto-focus-test: test-result,
            exposure-test: test-result,
            color-calibration: test-result,
            overall-score: f32,
        }

        enum test-result {
            passed,
            failed,
            warning,
            not-tested,
        }

        initialize: func(config: camera-config) -> result<_, string>;
        start-streaming: func() -> result<_, string>;
        stop-streaming: func() -> result<_, string>;
        update-config: func(config: camera-config) -> result<_, string>;
        get-status: func() -> camera-status;
        run-diagnostic: func() -> result<diagnostic-result, string>;
    }
}