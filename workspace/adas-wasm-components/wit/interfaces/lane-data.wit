/// Lane Detection Data Interface - EXPORTED by lane detection AI
package adas:lane-data@0.1.0;

interface lane-data {
    use adas:sensor-data/spatial-types.{position3d, quaternion};

    record lane-detection-results {
        lanes: list<detected-lane>,
        road-boundaries: list<road-boundary>,
        ego-lane-id: option<u32>,
        timestamp: u64,
        frame-id: string,
        confidence: f32,
    }

    record detected-lane {
        lane-id: u32,
        lane-type: lane-type,
        lane-points: list<lane-point>,
        lane-width: f32,
        curvature: f32,
        heading: f32,
        confidence: f32,
    }

    record lane-point {
        position: position3d,
        tangent: f32,
        normal: f32,
        paint-confidence: f32,
    }

    record road-boundary {
        boundary-type: boundary-type,
        boundary-points: list<position3d>,
        height: f32,
        confidence: f32,
    }

    enum lane-type {
        ego-lane,
        adjacent-left,
        adjacent-right,
        oncoming,
        merge-lane,
        exit-lane,
        shoulder,
    }

    enum boundary-type {
        curb,
        barrier,
        vegetation,
        cliff,
        construction,
        painted-line,
    }

    /// Get current lane detection results
    get-lane-detection: func() -> result<lane-detection-results, string>;
    
    /// Check if lane detection is available
    is-ready: func() -> bool;
}