package adas:planning@0.1.0;

/// Simplified planning interface for ADAS systems
interface planning {
    /// Waypoint in a trajectory
    record waypoint {
        x: f64,
        y: f64,
        heading: f64,
        velocity: f64,
    }

    /// Complete trajectory plan
    record trajectory {
        waypoints: list<waypoint>,
        total-distance: f64,
        estimated-time: f64,
        timestamp: u64,
    }

    /// Planning system status
    enum planning-status {
        idle,
        ready,
        planning,
        executing,
        completed,
        aborted,
        error,
    }

    /// Initialize planning system
    initialize: func() -> result<_, string>;

    /// Plan path from start to goal
    plan-path: func(start-x: f64, start-y: f64, goal-x: f64, goal-y: f64) -> result<trajectory, string>;

    /// Update current trajectory
    update-trajectory: func() -> result<_, string>;

    /// Get current planning status
    get-status: func() -> planning-status;

    /// Get current trajectory
    get-current-trajectory: func() -> option<trajectory>;

    /// Abort current planning
    abort-planning: func() -> result<_, string>;
}

world planning-component {
    export planning;
}