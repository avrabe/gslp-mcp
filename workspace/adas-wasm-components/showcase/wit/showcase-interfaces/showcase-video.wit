/// Showcase Video Interfaces - Production sensor simulation
package showcase:video;

interface playback-control {
    use adas:common-types/types.{timestamp, sensor-specification};
    use adas:data/sensor-data.{camera-frame, pixel-format};
    
    /// Video source configuration for automotive testing
    record video-source-config {
        source-type: video-source-type,
        playback-mode: playback-mode,
        sensor-simulation: sensor-simulation-params,
        automotive-metadata: automotive-video-metadata,
    }
    
    enum video-source-type {
        embedded-highway,        // 3.3MB highway driving footage
        embedded-city,          // Urban driving scenario
        embedded-parking,       // Low-speed maneuvering
        live-camera,           // Future: real camera input
    }
    
    enum playback-mode {
        loop-continuous,        // Infinite loop for demo
        single-pass,           // Play once then stop
        frame-stepped,         // Manual frame advance
        synchronized,          // Sync with system clock
    }
    
    /// Sensor simulation parameters for realistic testing
    record sensor-simulation-params {
        sensor-spec: sensor-specification,
        noise-simulation: noise-parameters,
        environmental-effects: environmental-effects,
        timing-simulation: timing-simulation,
    }
    
    record noise-parameters {
        enable-noise: bool,
        signal-noise-ratio-db: f32,
        motion-blur-enabled: bool,
        compression-artifacts: bool,
    }
    
    record environmental-effects {
        weather-simulation: weather-condition,
        lighting-simulation: lighting-condition,
        traffic-density: traffic-density,
    }
    
    record timing-simulation {
        frame-rate-hz: f32,
        jitter-simulation-ms: f32,
        dropped-frame-simulation: bool,
        synchronization-accuracy-us: u32,
    }
    
    /// Automotive video metadata for compliance
    record automotive-video-metadata {
        recording-location: string,
        vehicle-speed-kmh: f32,
        road-type: road-type,
        traffic-scenario: traffic-scenario,
        validation-status: validation-status,
    }
    
    enum road-type {
        highway,
        arterial,
        residential,
        parking-lot,
        test-track,
    }
    
    enum traffic-scenario {
        free-flow,
        congested,
        intersection,
        merging,
        lane-change,
        pedestrian-crossing,
        construction-zone,
    }
    
    enum validation-status {
        validated,
        under-review,
        synthetic,
        real-world,
    }
    
    /// Configure video source with automotive parameters
    configure-source: func(config: video-source-config) -> result<_, string>;
    
    /// Start video playback with automotive timing
    start-playback: func() -> result<_, string>;
    
    /// Pause video playback
    pause-playback: func() -> result<_, string>;
    
    /// Stop video playback and reset
    stop-playback: func() -> result<_, string>;
    
    /// Seek to specific frame for testing
    seek-to-frame: func(frame-number: u32) -> result<_, string>;
    
    /// Get current playback status
    get-playback-status: func() -> playback-status;
    
    /// Get frame at specific timestamp for synchronization
    get-frame-at-timestamp: func(timestamp: timestamp) -> option<camera-frame>;
    
    record playback-status {
        is-playing: bool,
        current-frame: u32,
        total-frames: u32,
        current-timestamp: timestamp,
        frame-rate: f32,
        dropped-frames: u32,
    }
}