/// Showcase Demo Interfaces - Production-grade ADAS demonstration
package showcase:demo;

interface demo-controller {
    use adas:common-types/types.{
        performance-metrics, 
        health-status, 
        timestamp,
        timing-constraints,
        asil-level
    };
    use adas:data/perception-data.{perceived-object};
    use adas:data/sensor-data.{camera-frame, sensor-config};
    use adas:control/ai-control.{ai-config};
    
    /// Start production-grade ADAS demo
    start-demo: func(config: production-demo-config) -> result<demo-session, string>;
    
    /// Get real-time automotive metrics
    get-automotive-metrics: func() -> automotive-demo-metrics;
    
    /// Interactive controls maintaining production data flow
    toggle-ai-processing: func(enabled: bool) -> result<_, string>;
    set-detection-confidence: func(threshold: f32) -> result<_, string>;
    
    /// Component health check for automotive compliance
    check-component-health: func() -> result<system-health-report, string>;
    
    /// Stop demo and perform automotive-grade shutdown
    stop-demo: func() -> result<_, string>;
    
    /// Production automotive demo configuration
    record production-demo-config {
        // Sensor configuration using production interfaces
        sensor-config: sensor-config,
        
        // AI configuration using production interfaces  
        ai-config: ai-config,
        
        // Real automotive timing constraints
        timing-constraints: timing-constraints,
        
        // Safety levels (ASIL compliance)
        safety-requirements: safety-requirements,
        
        // Demo presentation options
        showcase-options: showcase-display-options,
    }
    
    /// Safety requirements for automotive demo
    record safety-requirements {
        required-asil-level: asil-level,
        max-failure-rate: f32,
        redundancy-required: bool,
        emergency-stop-enabled: bool,
    }
    
    /// Demo display options
    record showcase-display-options {
        show-bounding-boxes: bool,
        show-confidence-scores: bool,
        show-object-ids: bool,
        show-performance-overlay: bool,
        show-safety-status: bool,
        enable-interactive-controls: bool,
        update-rate-hz: f32,
    }
    
    /// Real automotive metrics for showcase
    record automotive-demo-metrics {
        // Production performance data
        sensor-performance: performance-metrics,
        ai-performance: performance-metrics,
        system-health: health-status,
        
        // Automotive-specific metrics
        detection-accuracy: f32,
        object-tracking-stability: f32,
        timing-compliance: timing-compliance-status,
        safety-status: safety-status,
        
        // Real-time demo statistics
        frames-processed: u64,
        objects-detected: u32,
        session-uptime-ms: u64,
        timestamp: timestamp,
    }
    
    /// Timing compliance for real-time systems
    record timing-compliance-status {
        deadline-misses: u32,
        worst-case-latency-ms: f32,
        average-jitter-ms: f32,
        compliance-percentage: f32,
    }
    
    /// Safety status for automotive systems
    record safety-status {
        current-asil-level: asil-level,
        safety-violations: u32,
        emergency-stops: u32,
        degraded-mode-active: bool,
        last-safety-check: timestamp,
    }
    
    /// System health report
    record system-health-report {
        video-decoder-health: health-status,
        ai-processor-health: health-status,
        pipeline-health: health-status,
        visualizer-health: health-status,
        overall-health: health-status,
        critical-errors: list<string>,
        warnings: list<string>,
    }
    
    /// Demo session handle
    resource demo-session {
        get-status: func() -> demo-status;
        get-current-frame: func() -> option<showcase-frame>;
        get-metrics: func() -> automotive-demo-metrics;
    }
    
    enum demo-status {
        initializing,
        running,
        paused,
        degraded,
        error,
        emergency-stopped,
        completed,
    }
    
    /// Frame with production-grade detection data
    record showcase-frame {
        // Raw frame data using production sensor-data
        camera-frame: camera-frame,
        
        // AI detection results using production perception-data  
        detected-objects: list<perceived-object>,
        
        // Performance data for this frame
        processing-time-ms: f32,
        inference-time-ms: f32,
        safety-check-time-ms: f32,
        timestamp: timestamp,
    }
}