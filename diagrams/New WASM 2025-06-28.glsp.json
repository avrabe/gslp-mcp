{
  "id": "7c3eec8f-34d2-4ae0-9bfa-521e254970e0",
  "name": "New WASM 2025-06-28",
  "diagram_type": "wasm-component",
  "revision": 2,
  "created_at": "2025-06-28T15:55:31.491988Z",
  "updated_at": "2025-06-28T15:55:31.491993Z",
  "nodes": [
    {
      "id": "9ff63e54-7431-404c-a52a-4c66765907e2",
      "node_type": "wasm-component",
      "label": "adas_lidar_ecu",
      "properties": {
        "label": "adas_lidar_ecu",
        "componentPath": "./components/sensors/lidar/target/wasm32-wasip2/debug/adas_lidar_ecu.wasm",
        "interfaces": [
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-environment",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "environment",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "exit",
                "params": [
                  {
                    "name": "status",
                    "type": "anonymous"
                  }
                ],
                "results": []
              }
            ],
            "interface_type": "import",
            "name": "exit",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [],
            "interface_type": "import",
            "name": "error",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "poll",
                "params": [
                  {
                    "name": "in",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "poll",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]input-stream.subscribe",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.check-write",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.write",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "contents",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.blocking-write-and-flush",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "contents",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.blocking-flush",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]output-stream.subscribe",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "streams",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stdin",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stdin",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stdout",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stdout",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-stderr",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "stderr",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "now",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "subscribe-instant",
                "params": [
                  {
                    "name": "when",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "subscribe-duration",
                "params": [
                  {
                    "name": "when",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "monotonic-clock",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "now",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "wall-clock",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]descriptor.read-via-stream",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "offset",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.write-via-stream",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  },
                  {
                    "name": "offset",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.append-via-stream",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.get-type",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]descriptor.stat",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "filesystem-error-code",
                "params": [
                  {
                    "name": "err",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "types",
            "type": "import"
          },
          {
            "direction": "input",
            "functions": [
              {
                "isAsync": false,
                "name": "get-directories",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "import",
            "name": "preopens",
            "type": "import"
          },
          {
            "direction": "output",
            "functions": [
              {
                "isAsync": false,
                "name": "[method]lidar-stream.get-cloud",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]lidar-stream.is-available",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "[method]lidar-stream.get-point-count",
                "params": [
                  {
                    "name": "self",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "create-stream",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "export",
            "name": "lidar-data",
            "type": "export"
          },
          {
            "direction": "output",
            "functions": [
              {
                "isAsync": false,
                "name": "initialize",
                "params": [
                  {
                    "name": "config",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "start-scanning",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "stop-scanning",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "update-config",
                "params": [
                  {
                    "name": "config",
                    "type": "anonymous"
                  }
                ],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "get-status",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              },
              {
                "isAsync": false,
                "name": "run-diagnostic",
                "params": [],
                "results": [
                  {
                    "name": "result",
                    "type": "anonymous"
                  }
                ]
              }
            ],
            "interface_type": "export",
            "name": "lidar-control",
            "type": "export"
          }
        ],
        "dependenciesCount": 4,
        "description": "ADAS component: adas_lidar_ecu",
        "status": "available",
        "importsCount": 12,
        "exportsCount": 2,
        "witInfo": {
          "componentName": "adas_lidar_ecu",
          "dependencies": [
            {
              "interfaces": [
                "error",
                "poll",
                "streams"
              ],
              "package": "wasi:io",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "environment",
                "exit",
                "stdin",
                "stdout",
                "stderr"
              ],
              "package": "wasi:cli",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "monotonic-clock",
                "wall-clock"
              ],
              "package": "wasi:clocks",
              "version": "0.2.3"
            },
            {
              "interfaces": [
                "types",
                "preopens"
              ],
              "package": "wasi:filesystem",
              "version": "0.2.3"
            }
          ],
          "exports": [
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]lidar-stream.get-cloud",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]lidar-stream.is-available",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]lidar-stream.get-point-count",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "create-stream",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "lidar-data",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Record { fields: [WitParam { name: \"x\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"y\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"z\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }] }",
                  "name": "position3d"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"vx\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"vy\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"vz\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"speed\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }] }",
                  "name": "velocity3d"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"x\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"y\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"z\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"w\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }] }",
                  "name": "quaternion"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"position\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"intensity\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"ring\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u16\") } }, WitParam { name: \"timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }] }",
                  "name": "lidar-point"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"position\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"orientation\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "lidar-pose"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"points\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"frame-id\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"string\") } }, WitParam { name: \"sensor-pose\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "point-cloud"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "lidar-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "initialize",
                  "params": [
                    {
                      "name": "config",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "start-scanning",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "stop-scanning",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "update-config",
                  "params": [
                    {
                      "name": "config",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "get-status",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "run-diagnostic",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "lidar-control",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Record { fields: [WitParam { name: \"scan-frequency\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }, WitParam { name: \"angular-resolution\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"range-resolution\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"max-range\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f64\") } }, WitParam { name: \"intensity-threshold\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }, WitParam { name: \"noise-filtering\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"bool\") } }, WitParam { name: \"ground-removal\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"bool\") } }] }",
                  "name": "lidar-config"
                },
                {
                  "definition": "Enum { cases: [\"offline\", \"initializing\", \"warming-up\", \"scanning\", \"error\", \"maintenance\"] }",
                  "name": "lidar-status"
                },
                {
                  "definition": "Enum { cases: [\"passed\", \"failed\", \"warning\", \"not-tested\"] }",
                  "name": "test-result"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"laser-health\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"mirror-alignment\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"range-accuracy\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"point-density\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"intensity-calibration\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"overall-score\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"f32\") } }] }",
                  "name": "diagnostic-result"
                }
              ],
              "version": null
            }
          ],
          "filePath": "./components/sensors/lidar/target/wasm32-wasip2/debug/adas_lidar_ecu.wasm",
          "imports": [
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-environment",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "environment",
              "namespace": null,
              "package": null,
              "types": [],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "exit",
                  "params": [
                    {
                      "name": "status",
                      "type": "anonymous"
                    }
                  ],
                  "results": []
                }
              ],
              "name": "exit",
              "namespace": null,
              "package": null,
              "types": [],
              "version": null
            },
            {
              "functions": [],
              "name": "error",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "error"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "poll",
                  "params": [
                    {
                      "name": "in",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "poll",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "pollable"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]input-stream.subscribe",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.check-write",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.write",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "contents",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.blocking-write-and-flush",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "contents",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.blocking-flush",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]output-stream.subscribe",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "streams",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "error"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "input-stream"
                },
                {
                  "definition": "Resource { methods: [] }",
                  "name": "output-stream"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "pollable"
                },
                {
                  "definition": "Variant { cases: [WitVariantCase { name: \"last-operation-failed\", payload: Some(WitType { name: \"anonymous\", type_def: Primitive(\"custom\") }) }, WitVariantCase { name: \"closed\", payload: None }] }",
                  "name": "stream-error"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stdin",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stdin",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "input-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stdout",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stdout",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-stderr",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "stderr",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "now",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "subscribe-instant",
                  "params": [
                    {
                      "name": "when",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "subscribe-duration",
                  "params": [
                    {
                      "name": "when",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "monotonic-clock",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "instant"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "duration"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "pollable"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "now",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "wall-clock",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Record { fields: [WitParam { name: \"seconds\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u64\") } }, WitParam { name: \"nanoseconds\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"u32\") } }] }",
                  "name": "datetime"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "[method]descriptor.read-via-stream",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "offset",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.write-via-stream",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    },
                    {
                      "name": "offset",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.append-via-stream",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.get-type",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "[method]descriptor.stat",
                  "params": [
                    {
                      "name": "self",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                },
                {
                  "isAsync": false,
                  "name": "filesystem-error-code",
                  "params": [
                    {
                      "name": "err",
                      "type": "anonymous"
                    }
                  ],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "types",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Resource { methods: [] }",
                  "name": "descriptor"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "error"
                },
                {
                  "definition": "Enum { cases: [\"access\", \"would-block\", \"already\", \"bad-descriptor\", \"busy\", \"deadlock\", \"quota\", \"exist\", \"file-too-large\", \"illegal-byte-sequence\", \"in-progress\", \"interrupted\", \"invalid\", \"io\", \"is-directory\", \"loop\", \"too-many-links\", \"message-size\", \"name-too-long\", \"no-device\", \"no-entry\", \"no-lock\", \"insufficient-memory\", \"insufficient-space\", \"not-directory\", \"not-empty\", \"not-recoverable\", \"unsupported\", \"no-tty\", \"no-such-device\", \"overflow\", \"not-permitted\", \"pipe\", \"read-only\", \"invalid-seek\", \"text-file-busy\", \"cross-device\"] }",
                  "name": "error-code"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "filesize"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "input-stream"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "output-stream"
                },
                {
                  "definition": "Enum { cases: [\"unknown\", \"block-device\", \"character-device\", \"directory\", \"fifo\", \"symbolic-link\", \"regular-file\", \"socket\"] }",
                  "name": "descriptor-type"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "link-count"
                },
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "datetime"
                },
                {
                  "definition": "Record { fields: [WitParam { name: \"type\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"link-count\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"size\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"data-access-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"data-modification-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }, WitParam { name: \"status-change-timestamp\", param_type: WitType { name: \"anonymous\", type_def: Primitive(\"custom\") } }] }",
                  "name": "descriptor-stat"
                }
              ],
              "version": null
            },
            {
              "functions": [
                {
                  "isAsync": false,
                  "name": "get-directories",
                  "params": [],
                  "results": [
                    {
                      "name": "result",
                      "type": "anonymous"
                    }
                  ]
                }
              ],
              "name": "preopens",
              "namespace": null,
              "package": null,
              "types": [
                {
                  "definition": "Primitive(\"unknown\")",
                  "name": "descriptor"
                }
              ],
              "version": null
            }
          ],
          "summary": {
            "dependenciesCount": 4,
            "exportsCount": 2,
            "importsCount": 12,
            "totalFunctions": 33,
            "typesCount": 25
          },
          "worldName": "root"
        },
        "totalFunctions": 33,
        "componentName": "adas_lidar_ecu"
      }
    }
  ],
  "edges": [],
  "metadata": {}
}